---
# tasks file for control-plane

- name: Update apt cache
  become: true
  apt:
    update_cache: yes

- name: Install required packages
  become: true
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - nfs-common
    state: present

- name: Ensure kernel modules are loaded and persistent
  become: true
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter
    mode: '0644'

- name: Load overlay kernel module
  become: true
  modprobe:
    name: overlay
    state: present

- name: Load br_netfilter kernel module
  become: true
  modprobe:
    name: br_netfilter
    state: present

- name: Set sysctl params for Kubernetes networking
  become: true
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
    mode: '0644'

- name: Apply sysctl params
  become: true
  command: sysctl --system

- name: Install containerd
  become: true
  apt:
    name: containerd
    state: present

- name: Create containerd config directory
  become: true
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Generate default containerd config with SystemdCgroup enabled
  become: true
  shell: |
    containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Restart containerd
  become: true
  systemd:
    name: containerd
    state: restarted
    enabled: true

- name: Get latest Kubernetes version (major.minor)
  ansible.builtin.shell: |
    curl -L -s https://dl.k8s.io/release/stable.txt | awk 'BEGIN { FS="." } { printf "%s.%s", $1, $2 }'
  register: kube_latest
  changed_when: false

- name: Ensure /etc/apt/keyrings exists
  become: true
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes public signing key
  become: true
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/{{ kube_latest.stdout }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Add Kubernetes apt repository
  become: true
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ kube_latest.stdout }}/deb/ /\n"
    mode: '0644'

- name: Update apt cache after adding Kubernetes repo
  become: true
  apt:
    update_cache: yes

- name: Install kubelet, kubeadm, kubectl
  become: true
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Hold kubelet, kubeadm, kubectl at current version
  become: true
  shell: apt-mark hold kubelet kubeadm kubectl

- name: Configure crictl to use containerd
  become: true
  shell: |
    crictl config \
      --set runtime-endpoint=unix:///run/containerd/containerd.sock \
      --set image-endpoint=unix:///run/containerd/containerd.sock

- name: Set kubelet extra args to use primary IP
  copy:
    dest: /etc/default/kubelet
    content: |
      KUBELET_EXTRA_ARGS="--node-ip {{ ansible_env.PRIMARY_IP }}"
    mode: '0644'
  become: true

- name: Set POD_CIDR variable
  set_fact:
    pod_cidr: "192.168.0.0/16"

- name: Get load balancer IP
  shell: "dig +short loadbalancer"
  register: loadbalancer_ip
  changed_when: false


 
